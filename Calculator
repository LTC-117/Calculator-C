#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// variables:
float A, B, S;
int m, n, num, entry;

// functions:
void sum();
void sub();
void multi();
void divis();
void sqt();
void matrix();
void fact();

int main()
{

    printf("Welcome to the calculator! Our operations are:\n\n");
    printf(" 1: Adition\n 2: Subtraction\n 3: Multiplication\n 4: Division\n 5: Square Root\n 6: Matrix Generator\n 7: Factorial\n 8: Exit\n");
    printf("\nInsert your operation:\n");
    do
    {
        scanf("%d", &entry);

        switch (entry)
        {

        case 1:
            sum();
            break;
        case 2:
            sub();
            break;
        case 3:
            multi();
            break;
        case 4:
            divis();
            break;
        case 5:
            sqt();
            break;
        case 6:
            matrix();
            break;
        case 7:
            fact();
            break;
        case 8:
            printf("Goodbye!");
            break;

        default:
            printf("INVALID OPTION! PLEASE, TRY AGAIN: \n");
        }
    } while (entry != 8);

    return 0;
}

void sum(void)
{

    printf("ADITION! \n");
    printf("insert A:\n");
    scanf("%f", &A);
    printf("insert B:\n");
    scanf("%f", &B);
    printf("the result is:\n%.2f", A + B);
}

void sub(void)
{

    printf("SUBTRACTION! \n");
    printf("insert A:\n");
    scanf("%f", &A);
    printf("insert B:\n");
    scanf("%f", &B);
    printf("the result is:\n%.2f", A - B);
}

void multi(void)
{

    printf("MULTIPLICATION! \n");
    printf("insert A:\n");
    scanf("%f", &A);
    printf("insert B:\n");
    scanf("%f", &B);
    printf("the result is:\n%.2f", A * B);
}

void divis(void)
{

    printf("DIVISION! \n");
    printf("insert A:\n");
    scanf("%f", &A);
    printf("insert B:\n");
    scanf("%f", &B);
    if (B != 0)
    {
        printf("result is:\n%.2f", A / B);
    }
    else
    {
        printf("ERROR");
    }
}

void sqt(void)
{

    printf("SQUARE ROOT! \n");
    printf("insert the number:\n");
    scanf("%f", &S);
    if (S >= 0)
    {
        printf("result is: \n%.2f", sqrt(S));
    }
    else
    {
        printf("ERROR!");
    }
}

void matrix(void)
{

    printf("MATRIX GENERATOR! \n");
    printf("insert the amount of lines:\n");
    scanf("%d", &m);
    printf("insert the amount of columns:\n");
    scanf("%d", &n);

    int **mtx = (int **)malloc(m * sizeof(int *));
    for (int i = 0; i < m; i++)
    {
        mtx[i] = (int *)malloc(n * sizeof(int));
    }

    printf("now insert the %d elements of your matrix:\n", m * n);
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("element a[%d][%d]: \n", i + 1, j + 1);
            scanf("%d", &mtx[i][j]);
        }
    }

    printf("your matrix:\n\n");
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("%d ", mtx[i][j]);
        }
        printf("\n");
    }

    for (int i = 0; i < m; i++)
    {
        free(mtx[i]);
    }
    free(mtx);
}

void fact(void)
{

    printf("FACTORIAL! \n");
    printf("insert the number: \n");
    scanf("%d", &num);

    if (num > 0)
    {
        printf("%d factorial is: ", num);
        for (int i = num - 1; i > 0; i--)
        {
            num *= i;
        }
        printf("%d", num);
    }

    if (num == 0)
    {
        printf("0 factorial is: 1");
    }

    if (num < 0)
    {
        printf("ERROR!");
    }
}
